import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_log_error
from sklearn.preprocessing import LabelEncoder

# Load the data
train = pd.read_csv("/content/drive/MyDrive/Predict Calorie Expenditure/train.csv")
test = pd.read_csv("/content/drive/MyDrive/Predict Calorie Expenditure/test.csv")

# Encode categorical variable 'Sex'
le = LabelEncoder()
train['Sex'] = le.fit_transform(train['Sex'])  # male=1, female=0
test['Sex'] = le.transform(test['Sex'])

# Define features and target
features = ['Sex', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp']
target = 'Calories'

X = train[features]
y = train[target]
X_test = test[features]

# Split training data for local validation
X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict on validation set
y_pred = model.predict(X_valid)

# Calculate RMSLE
rmsle = np.sqrt(mean_squared_log_error(y_valid, y_pred))
print(f"Validation RMSLE: {rmsle:.4f}")

# Predict on test data
test_preds = model.predict(X_test)

# Prepare submission
submission = pd.DataFrame({
    'id': test['id'],
    'Calories': test_preds
})

# Save submission
submission.to_csv("submission.csv", index=False)
print("Submission file saved as 'submission.csv'")
